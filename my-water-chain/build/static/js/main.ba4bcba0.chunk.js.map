{"version":3,"sources":["components/junk/Header.jsx","components/AuthenticateCard.jsx","components/junk/Footer.jsx","components/screens/StarterScreen.jsx","components/constants/ErrorCodes.jsx","components/constants/LoginDetails.jsx","components/security/Auth.jsx","components/constants/dummyconstantfiles.js","components/screens/LoginScreen.jsx","components/constants/RegistrationFormControlOptions.jsx","components/screens/RegisterScreen.jsx","components/constants/ResponseConstants.js","components/coreComponents/LineChart.js","components/coreComponents/LineChaart.js","components/constants/WelcomeScreen.js","components/coreComponents/Header.jsx","components/coreComponents/BarCharts.js","components/coreComponents/DonutChart.js","components/coreComponents/PrettyTable.js","components/screens/DisplayScreen.jsx","components/security/PrivateRoute.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","props","className","header","Authentication","onClick","onClickaction","text","Footer","today","Date","Element3","toString","split","slice","filter","Boolean","join","Element2","getFullYear","withRouter","history","push","ErrorCodes","LoginDetails","id","controlId","Label","type","placeholder","this","authenticated","jsonData","TableHeaders","MyTableHeaders","ipaddress","LoginScreen","useState","email","password","credentials","setCredentials","loading","setloading","credentialMessage","setcredentialMessage","Form","map","Group","key","autoComplete","Control","value","onChange","e","target","test","Text","Button","variant","disabled","Spinner","as","animation","size","role","aria-hidden","a","preventDefault","JSONString","fetch","method","headers","body","JSON","stringify","then","response","json","jsonBackend","Auth","login","alert","RegistrationControl","formcontrolIdType","fieldLabel","fieldType","fieldPlaceHolder","fieldDetails","RegisterScreen","Device_ID","Registerar_UserName","Registerar_Email","Organisation_Name","Organisation_Email","Password","Reenter_Password","setcredentials","autocomplete","HeadersConstant","Chart_01_Heading_01","Chart_01_Heading_02","ColorHeading01","ColorHeading02","Heading01Text","Time_Labels","Day_Lables","Water_Quality_Heading","Water_Quantity_Heading","Color_For_Credits","Color_For_Quality","QualityParamsHeading","CreditsParamHeading","QualityWords","CreditWords","LineChart01OptionText","Chart_02_Heading_01","Chart_02_Heading_02","Chart_02_Heading_03","Chart_02_Heading_04","StableHeading","SelfHeading","LineChart","Color_01","Color_02","data","labels","datasets","label","Plot1","borderColor","backgroundColor","pointBackgroundColor","pointBorderColor","Plot2","options","title","display","scales","yAxes","ticks","min","max","stepSize","LineChaart","color_01","color_02","color_03","color_04","Plot3","Plot4","DashboardDetails","Heading","WaterCoins","Allowance","ExpireText","LogoName","src","process","alt","BarChart","Colors","SecondColors","HH1","HH2","DonutChart","Color","Words","Data","Texts","PrettyTable","useHistory","FetchedData","SelfData","selfData","PasswordPrompt","updatePasswordPrompt","loaded","_id","Credits","details","setpurchaseDetails","detail","val","Email","content","console","log","DisplayScreen","reduce_to_index","factor","LowedDown","i","length","Block_Chain","water_data","FlowRate","QuantityIndexed","Water_Quantity_Index_Day","ChartState","changeChartState","ButtonText","changeButtonText","generatePurchase","finalbody","url","prev","industry_response","self_details","Solid_Waste_Analysis_Index","Water_Quality_Index_Day","ColorSchema","Quality_Analysis","SPI","CDI","SWI","HSI","LabelTime","Previous_Comparision","Yesterday_Quality","Last3Day_Quality","Last7Day_Quality","Monthly_Quality","Stable_Comparision","Stable_Quality","Self_Quality","Credit_Consumption_History","ProtectedRoute","Component","component","rest","render","isAuthenticated","to","pathname","state","from","location","App","StarterScreen","exact","path","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ba4bcba0.chunk.js","sourcesContent":["import React from \"react\";\r\nexport default function Header(props)\r\n{\r\n    return(\r\n        <div>\r\n        <h1 className = \"HeadingForm\">{props.header}</h1>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\n\r\nexport default function Authentication(props)\r\n{\r\n    return <button className = \"UI-Button\" onClick={props.onClickaction}>{props.text}</button>;\r\n}","import React from \"react\";\r\n\r\nexport default function Footer()\r\n{\r\n    const Element1 = \"GZB Automation\";\r\n    const today = new Date();\r\n    const DayFormat = today.toString().split(\" \").slice(0,4);\r\n    const Element3 = DayFormat.filter(Boolean).join(\" \");\r\n    const Element2 = \"Copyright © \"+today.getFullYear().toString()+\". All rights reserved.\";\r\n    return(\r\n        <div className=\"FooterAligner\">\r\n        <div className=\"FooterElement Footer01\">{Element1}</div>\r\n        <div className=\"FooterElement\">{Element2}</div>\r\n        <div className=\"FooterElement Footer03\">{Element3}</div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport Header from '../junk/Header.jsx';\r\nimport Authentication from '../AuthenticateCard.jsx';\r\nimport Footer from '../junk/Footer.jsx';\r\nimport { withRouter } from 'react-router-dom';\r\nfunction StarterScreen(props) {\r\n  function loginClick()\r\n    {\r\n      props.history.push('/login');\r\n    }\r\n    function registerClick()\r\n    {\r\n      props.history.push('/register');\r\n    }\r\n  return (\r\n    <div>\r\n      <Header header=\"My Water Chain\"/>\r\n      <div className=\"WhiteCard\">\r\n      <div className=\"whiteSpace\">\r\n      </div>\r\n      <Authentication text=\"Login\" onClickaction={loginClick} />\r\n      <Authentication text=\"Register\" onClickaction={registerClick}/>\r\n      </div>\r\n      <Footer />\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(StarterScreen);\r\n","const ErrorCodes = [\"\",\"Field Cannot be Empty.\",\"Maximum Character Exceed!\",\r\n\"Spaces are not allowed.\",\"Wrong Email Syntax!\",\"Invalid ID\",\"Passwords Don't Match!\"];\r\nexport default ErrorCodes;","const LoginDetails = [\r\n    {\r\n        id:0,\r\n        controlId:\"formBasicEmail\",\r\n        Label:\"Email\",\r\n        type:\"email\",\r\n        placeholder:\"Enter Registered Email\",\r\n\r\n    },\r\n    {\r\n        id:1,\r\n        controlId:\"formBasicPassword\",\r\n        Label:\"Password\",\r\n        type:\"password\",\r\n        placeholder:\"Enter Password\",\r\n\r\n    }\r\n];\r\nexport default LoginDetails;","class Auth\r\n{\r\n    constructor()\r\n    {\r\n        this.authenticated = false;\r\n    }\r\n    login(props)\r\n    {\r\n        this.authenticated = true;\r\n        this.jsonData = props;\r\n    }\r\n    logout()\r\n    {\r\n        this.authenticated = false;\r\n    }\r\n    isAuthenticated()\r\n    {\r\n        return this;\r\n    }\r\n\r\n}\r\n\r\nexport default new Auth();","const DummyDetails = [\r\n    {\r\n        IndustryName:\"Water Glorius\",\r\n        IndustryID:\"casfsehsASDASHCSDDAS\",\r\n        Allowance:\"280 Liters/day\",\r\n        Credits:2.5,\r\n        Converted: \"15 Liters/day\",\r\n        Purchased:0,\r\n    },\r\n    {\r\n        IndustryName:\"Water Sagitarios\",\r\n        IndustryID:\"casfsdvsdcsdSHCSDDAS\",\r\n        Allowance:\"290 Liters/day\",\r\n        Credits:3.0,\r\n        Converted: \"5 Liters/day\",\r\n        Purchased:0,\r\n    },\r\n    {\r\n        IndustryName:\"Water Tickolas\",\r\n        IndustryID:\"casfsedagwdDASHCSDDAS\",\r\n        Allowance:\"250 Liters/day\",\r\n        Credits:-2.5,\r\n        Converted: \"5 Liters/day\",\r\n        Purchased:0,\r\n    },\r\n    {\r\n        IndustryName:\"ParkinSons\",\r\n        IndustryID:\"casfsehsASDASHCSDDAS\",\r\n        Allowance:\"230 Liters/day\",\r\n        Credits:-5.0,\r\n        Converted: \"25 Liters/day\",\r\n        Purchased:0,\r\n    },\r\n];\r\nconst TableHeaders = [\"Industry Name\",\"Industry-ID\",\"Allowance\",\"Credits\"];\r\nconst MyTableHeaders = [\"Water Drops\",\"Current Allowance\",\"Expiry Date\"];\r\nconst MyTableDetails = [3,\"250 Liters/day\",0,\"1-August-2022\"];\r\nconst ipaddress = 'http://34.201.161.194/';\r\nexport default DummyDetails;\r\nexport {TableHeaders,MyTableHeaders,MyTableDetails,ipaddress};\r\n\r\n","import React, { useState } from \"react\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ErrorCodes from '../constants/ErrorCodes.jsx';\r\nimport LoginDetails from '../constants/LoginDetails.jsx';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport Auth from '../security/Auth.jsx';\r\nimport Footer from '../junk/Footer';\r\nimport {ipaddress} from \"../constants/dummyconstantfiles\";\r\n\r\nexport default function LoginScreen(props)\r\n{\r\n  const [credentials,setCredentials] = useState({\r\n    email:\"\",\r\n    password:\"\"\r\n  });\r\n  const [loading,setloading] =useState(false);\r\n  const [credentialMessage,setcredentialMessage]=useState({\r\n    email:\"\",\r\n    password:\"\"\r\n  });\r\n  function ErrorChecker()\r\n  {\r\n    let regex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n    if(regex.test(credentials[\"email\"]))\r\n      setcredentialMessage({...credentialMessage, [\"email\"]: ErrorCodes[0]});\r\n \r\n    else\r\n      setcredentialMessage({...credentialMessage, [\"email\"]: ErrorCodes[4]});\r\n\r\n  }\r\n  function LoginScreenRenderer(props)\r\n  {\r\n    return <Form.Group key={props.id} autoComplete=\"off\" controlId={props.controlId}>\r\n    <Form.Label>{props.Label}</Form.Label>\r\n    <Form.Control type={props.type} placeholder={props.placeholder}\r\n    value={credentials[props.type]} onChange={e=>{\r\n      setCredentials({...credentials, [props.type]: e.target.value});\r\n      ErrorChecker();\r\n      }}\r\n    />\r\n    <Form.Text className=\"text-muted\">\r\n      {credentialMessage[props.type]}\r\n      </Form.Text>\r\n  </Form.Group>;\r\n  }\r\n  return(\r\n    <div>\r\n    <Form className=\"FormAligner\">\r\n    {LoginDetails.map(LoginScreenRenderer)}\r\n    {loading?<div className=\"UI-Aligner\">\r\n\r\n      <Button className=\"UI-Button-Click\" variant=\"primary\" disabled>\r\n    <Spinner\r\n      as=\"span\"\r\n      animation=\"border\"\r\n      size=\"sm\"\r\n      role=\"status\"\r\n      aria-hidden=\"true\"\r\n    />\r\n    <span className=\"sr-only\">Loading...</span>\r\n    </Button> \r\n      </div>:<div className=\"UI-Aligner\"><Button className=\"UI-Button-Click\" onClick={async(e)=>{\r\n      e.preventDefault();\r\n      setloading(true);\r\n      const JSONString = credentials;\r\n      const response = await fetch(`${ipaddress}login`,{\r\n        method: 'POST',\r\n        headers:{\r\n          'Content-Type':'application/json'\r\n        },\r\n        body:JSON.stringify(JSONString)\r\n      }).then(response=>response.json()).then(async(jsonData)=>{\r\n        if(jsonData[\"Is_Valid\"])\r\n        {\r\n          const BackendData = await fetch(`${ipaddress}fetching`,{\r\n            method: 'POST',\r\n            headers:{\r\n              'Content-Type':'application/json'\r\n            },\r\n            body:JSON.stringify(JSONString)\r\n          }).then(response=>response.json()).then((jsonBackend)=>{\r\n            //properties-> jsonBackend\r\n            setloading(false);\r\n            Auth.login(jsonBackend);\r\n            props.history.push(\"/login-props-test\");\r\n          });\r\n          \r\n        }\r\n        else\r\n        {\r\n          setloading(false);\r\n          alert(\"Invalid Credentials! Error Message: \"+jsonData[\"Error_Message\"]);\r\n        }\r\n      });\r\n    }}>Login</Button></div>}\r\n    </Form>\r\n    <Footer />\r\n    </div>\r\n  );\r\n}","//0=> Check for Blanks 1=> Check for 12 character String\r\nconst RegistrationControl = [\r\n    {\r\n        id:0,\r\n        formcontrolIdType:\"formBasicText-0\",\r\n        fieldLabel:\"Registration-ID\",\r\n        fieldType:\"text\",\r\n        fieldPlaceHolder:\"Enter the 12 digit Registration ID\",\r\n        fieldDetails:\"Device_ID\",\r\n    },\r\n    {\r\n        id:1,\r\n        formcontrolIdType:\"formBasicText-1\",\r\n        fieldLabel:\"Registerar Username\",\r\n        fieldType:\"text\",\r\n        fieldPlaceHolder:\"Enter your Username.\",\r\n        fieldDetails:\"Registerar_UserName\",\r\n    },\r\n    {\r\n        id:2,\r\n        formcontrolIdType:\"formBasicEmail-0\",\r\n        fieldLabel:\"Registerar Email ID\",\r\n        fieldType:\"email\",\r\n        fieldPlaceHolder:\"Enter your Email-ID.\",\r\n        fieldDetails:\"Registerar_Email\",\r\n    },\r\n    {\r\n        id:3,\r\n        formcontrolIdType:\"formBasicText-2\",\r\n        fieldLabel:\"Organisation Name\",\r\n        fieldType:\"text\",\r\n        fieldPlaceHolder:\"Enter your Water Provider.\",\r\n        fieldDetails:\"Organisation_Name\",\r\n    },\r\n    {\r\n        id:4,\r\n        formcontrolIdType:\"formBasicEmail-1\",\r\n        fieldLabel:\"Organisation Email\",\r\n        fieldType:\"email\",\r\n        fieldPlaceHolder:\"Enter Water Provider ID.\",\r\n        fieldDetails:\"Organisation_Email\",\r\n    },\r\n    {\r\n        id:5,\r\n        formcontrolIdType:\"formBasicPassword-0\",\r\n        fieldLabel:\"Password\",\r\n        fieldType:\"password\",\r\n        fieldPlaceHolder:\"Enter Password.\",\r\n        fieldDetails:\"Password\",\r\n    },\r\n    {\r\n        id:6,\r\n        formcontrolIdType:\"formBasicPassword-1\",\r\n        fieldLabel:\"Re-enter Password\",\r\n        fieldType:\"password\",\r\n        fieldPlaceHolder:\"Re-enter Password.\",\r\n        fieldDetails:\"Reenter_Password\",\r\n    },\r\n\r\n];\r\nexport default RegistrationControl;","import React,{useState} from \"react\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport RegistrationControl from '../constants/RegistrationFormControlOptions';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport Footer from \"../junk/Footer\";\r\nimport {ipaddress} from \"../constants/dummyconstantfiles\";\r\nexport default function RegisterScreen()\r\n{\r\n  const [credentials,setcredentials] = useState({\r\n    Device_ID:\"\",\r\n    Registerar_UserName:\"\",\r\n    Registerar_Email:\"\",\r\n    Organisation_Name:\"\",\r\n    Organisation_Email:\"\",\r\n    Password:\"\",\r\n    Reenter_Password:\"\"\r\n  });\r\n\r\n  const [loading,setloading] = useState(false);\r\n\r\n  function MapFields(props)\r\n  {\r\n    return<Form.Group key={props.id} autocomplete=\"off\" controlId={props.formcontrolIdType}>\r\n    <Form.Label>{props.fieldLabel}</Form.Label>\r\n    <Form.Control type={props.fieldType} placeholder={props.fieldPlaceHolder}\r\n    value={credentials[props.fieldDetails]} onChange={e=>{\r\n      setcredentials({...credentials, [props.fieldDetails]: e.target.value});\r\n      // ErrorChecker();\r\n      }}\r\n    />\r\n    {  //<Form.Text className=\"text-muted\">\r\n      //{credentialMessage[props.fieldDetails]}\r\n      //</Form.Text>\r\n    }\r\n  </Form.Group>;\r\n  }\r\n\r\n  return(<div>\r\n    <Form className=\"FormAligner\">\r\n    {RegistrationControl.map(MapFields)}\r\n    {loading?<div className=\"UI-Aligner\">\r\n\r\n    <Button className=\"UI-Button-Click\" variant=\"primary\" disabled>\r\n  <Spinner\r\n    as=\"span\"\r\n    animation=\"border\"\r\n    size=\"sm\"\r\n    role=\"status\"\r\n    aria-hidden=\"true\"\r\n  />\r\n  <span className=\"sr-only\">Loading...</span>\r\n  </Button> \r\n    </div>:<div className=\"UI-Aligner\"><Button className=\"UI-Button-Click\" onClick={async(e)=>{\r\n      e.preventDefault();\r\n      setloading(true);\r\n      const JSONString = credentials;\r\n      const response = await fetch(`${ipaddress}register`,{\r\n        method: 'POST',\r\n        headers:{\r\n          'Content-Type':'application/json'\r\n        },\r\n        body:JSON.stringify(JSONString)\r\n      }).then(response=>response.json()).then((jsonData)=>{\r\n        setloading(false);\r\n        alert(jsonData[\"Error_Message\"]);\r\n      });\r\n    }}>Submit</Button></div>}\r\n    </Form>\r\n    <Footer />\r\n    </div>\r\n  );\r\n}","const HeadersConstant = {\r\n  Chart_01_Heading_01:\"Flow Rate (milli-sq/pixels)\",\r\n  Chart_01_Heading_02:\"Solid Waste Index\",\r\n  ColorHeading01:'rgba(234,156,234,0.6)',\r\n  ColorHeading02:'rgba(255,0,0,0.6)',\r\n  Heading01Text:'SWA and Flow Rate Index',\r\n\r\n\r\n  Time_Labels:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24],\r\n  Day_Lables:[\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\",\"Sunday\"],\r\n  Water_Quality_Heading:\"Water Quality Index\",\r\n  Water_Quantity_Heading:\"Water Quantity Index\",\r\n  Color_For_Credits:['rgba(255,156,86,0.6)','rgba(250,100,100,0.6)','rgba(100,250,200,0.6)',\r\n  'rgba(120,120,120,0.5)','rgba(120,240,120,0.5)','rgba(60,120,240,0.6)','rgba(200,120,120,0.5)','rgba(120,120,250,0.5)'],\r\n  Color_For_Quality:['rgba(255,156,146,0.6)','rgba(250,100,100,0.6)','rgba(150,156,200,0.6)','rgba(180,250,200,0.6)'],\r\n  QualityParamsHeading:\"Quality Distribution of Different Parameters\",\r\n  CreditsParamHeading:\"Monthly Credit Consumption\",\r\n  QualityWords:[\"Spectral\",\"Conductivity\",\"Solid-Waste\",\"Histogram\"],\r\n  CreditWords:[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\"],\r\n  LineChart01OptionText:'SWA and Flow Rate Index',\r\n  Chart_02_Heading_01:\"Quality Yesterday\",\r\n  Chart_02_Heading_02:\"Quality in Last 3 Days\",\r\n  Chart_02_Heading_03:\"Quality in Last 7 Days\",\r\n  Chart_02_Heading_04:\"Quality in Last 30 Days\",\r\n  \r\n  StableHeading: \"Stable Quality\",\r\n  SelfHeading: \"Self Quality\"\r\n};\r\nexport default HeadersConstant;\r\n\r\nconst ResponseConstant = {\r\n    \"Time_Labels\":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24],\r\n    \"Day_Lables\":[\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\",\"Sunday\"],\r\n    \"Water_Quality_Index\": [1.5,2.5,3.5,1.2,2.3,3.4,2.2,3.2,1.2,3.5,5.4,2.6,2,1,1,4,2.2,2.6,3.4,4.5,4.6,4.8,2],\r\n    \"Water_Quantity_Index\": [2200,2400,1200,1600,\r\n                            2400,1200,1600,3400,\r\n                            2200,2400,1200,2100,\r\n                            1200,1600,3400,2200,\r\n                            1200,1600,3400,5600,\r\n                            3400,5600,1340,1500,],\r\n    \"Water_Quality_Index_Day\":[1.24,1.35,1.68,1.23,1.35,2.45,6.43],\r\n    \"Water_Quantity_Index_Day\":[120000,2400000,3200000,1245000,\r\n                              2404000,4500000,3402000],\r\n    \"Quality_Analysis\":{\r\n                          \"SPI\":2.5,\r\n                          \"CDI\":2.6,\r\n                          \"SWI\":3.4,\r\n                          \"HSI\":2.4\r\n                      },\r\n    \"Previous_Comparision\":{\r\n                              \"Yesterday_Quality\":[\r\n                                2.5,4.32,2.44,5.44,2.42,\r\n                                3.5,5.2,1.44,6.24,5.41,\r\n                                1.44,6.24,5.41,2.32,1.88,\r\n                                3.5,5.2,1.44,6.24,5.41,\r\n                                4.44,6,6.28,5.88\r\n                              ],\r\n                              \"Yesterday_Quantity\":[\r\n                                2200,2400,1200,2100,\r\n                                1200,1600,3400,2200,\r\n                                1200,1600,3400,5600,\r\n                                1600,3400,2200,2400,\r\n                                2200,1600,3400,2200,\r\n                                1200,3400,4500,2400\r\n                              ],\r\n                              \"Last3Day_Quality\":[\r\n                                1.44,6.24,5.41,2.32,1.88,\r\n                                3.5,5.2,1.44,6.24,5.41,\r\n                                4.44,6,6.28,5.88,1.44,6.24,\r\n                                2.5,4.32,2.44,5.44,2.42,\r\n                                3.5,5.2,1.44,6.24,5.41,\r\n                                2.45,1.48,2.66,3.42\r\n                              ],\r\n                              \"Last3Day_Quantity\":[\r\n                                2200,4400,1200,2100,\r\n                                3200,5600,3400,2200,\r\n                                1500,1600,3400,5600,\r\n                                1200,3400,2200,2400,\r\n                                2200,1600,3400,2200,\r\n                                3400,3400,2500,2900\r\n                              ],\r\n                              \"Last7Day_Quality\":[\r\n                                1.44,4.24,5.41,2.32,1.88,\r\n                                3.5,6.2,1.44,6.24,5.41,\r\n                                1.24,6,6.28,2.88,5.44,6.24,\r\n                                2.5,4.32,3.44,3.44,2.42,\r\n                                4.5,5.4,3.44,6.24,5.41,\r\n                                2.45,4.48,3.66,3.42\r\n                              ],\r\n                              \"Last7Day_Quantity\":[\r\n                                2200,4400,1200,3100,\r\n                                3200,2600,3400,2200,\r\n                                1500,2200,1400,5600,\r\n                                1200,3900,2200,1400,\r\n                                2200,1600,3400,3200,\r\n                                3400,3400,2600,5900\r\n                              ],\r\n                              \"Monthly_Quality\":[\r\n                                2.44,4.24,5.41,3.32,1.88,\r\n                                1.8,2.2,3.44,6.24,5.41,\r\n                                1.24,6,4.28,2.88,3.44,6.24,\r\n                                2.5,1.32,5.44,3.44,2.42,\r\n                                5.5,5.4,2.44,5.24,5.41,\r\n                                2.45,2.48,2.66,2.42\r\n                              ],\r\n                              \"Monthly_Quantity\":[\r\n                                2200,4800,1200,3100,\r\n                                1200,2700,3400,2200,\r\n                                2500,2500,3400,5600,\r\n                                4200,3400,3200,1400,\r\n                                6200,1600,3400,3200,\r\n                                1400,3400,6600,5900\r\n                              ],\r\n  \r\n                          },\r\n    \"Stable_Comparision\":{\r\n                            \"Stable_Quality\":[2.5,2.8,3.2,2.8,2.5,3.2,3.2],\r\n                            \"Stable_Quantity\":[1200,1400,1800,2400,3200,2800,2500],\r\n                            \"Self_Quality\":[3.5,2.4,3.6,2.1,2.8,3.9,3.4],\r\n                            \"Self_Quantity\":[1600,1700,1300,2200,3800,2200,2800],\r\n                        },\r\n    \"Credit_Consumption_History\":[2,3,2,3,5,4,2,2],\r\n    \"Industry_Name\":[],\r\n    \"Industry_ID\":[],\r\n    \"Industry_Allowance\":[],\r\n    \"Industry_Credits\":[],\r\n    \"Self_Data\":{\r\n                  \"Self_Credits\":2,\r\n                  \"Self_Consumption\":1200,\r\n                  \"Self_Allowance\":0,\r\n                  \"Expiry_Date\":\"12-March-2020\",\r\n                }\r\n  };\r\n  ","import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport HeadersConstant from '../constants/ResponseConstants.js';\r\nfunction LineChart(props)\r\n{\r\n    const Color_01 = ['rgba(0,0,255,0.5)'];\r\n    const Color_02 = ['rgba(240,160,255,0.4)'];\r\n    const data ={\r\n        labels: HeadersConstant.Time_Labels,\r\n        datasets:[\r\n            {\r\n                label: HeadersConstant.Chart_01_Heading_01,\r\n                data: props.Plot1,\r\n                borderColor: Color_01,\r\n                backgroundColor: Color_01,\r\n                pointBackgroundColor:Color_01,\r\n                pointBorderColor:Color_01,\r\n            },\r\n            {\r\n                label: HeadersConstant.Chart_01_Heading_02,\r\n                data: props.Plot2,\r\n                borderColor: Color_02,\r\n                backgroundColor: Color_02,\r\n                pointBackgroundColor:Color_02,\r\n                pointBorderColor:Color_02,\r\n            }\r\n        ]\r\n\r\n    }\r\n    const options = {\r\n        title: {\r\n            display:true,\r\n            text: 'SWA and Flow Rate Index',\r\n\r\n        },\r\n        scales: {\r\n            yAxes: [\r\n                {\r\n                    ticks:{\r\n                        min:0,\r\n                        max:10,\r\n                        stepSize: 1,\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    }\r\n    return <Line className = \"Chart-Line-Chart\"\r\n    data={data} options={options}/>;\r\n}\r\n\r\nexport default LineChart;","import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport HeadersConstant from '../constants/ResponseConstants.js';\r\nfunction LineChaart(props)\r\n{\r\n    const color_01 = ['rgba(0, 182, 255, 0.8)'];\r\n    const color_02 = ['rgba(1, 255, 255, 0.8)'];\r\n    const color_03 = ['rgba(0, 206, 255, 0.8)'];\r\n    const color_04 = ['rgba(200, 227, 248, 0.8)'];\r\n    const data ={\r\n        labels: HeadersConstant.Time_Labels,\r\n        datasets:[\r\n            {\r\n                label: HeadersConstant.Chart_02_Heading_01,\r\n                data: props.Plot1,\r\n                borderColor: color_01,\r\n                backgroundColor: color_01,\r\n                pointBackgroundColor:color_01,\r\n                pointBorderColor:color_01,\r\n\r\n            },\r\n            {\r\n                label: HeadersConstant.Chart_02_Heading_02,\r\n                data: props.Plot2,\r\n                borderColor: color_02,\r\n                backgroundColor: color_02,\r\n                pointBackgroundColor:color_02,\r\n                pointBorderColor:color_02,\r\n            },\r\n            {\r\n                label: HeadersConstant.Chart_02_Heading_03,\r\n                data: props.Plot3,\r\n                borderColor: color_03,\r\n                backgroundColor: color_03,\r\n                pointBackgroundColor:color_03,\r\n                pointBorderColor:color_03,\r\n            },\r\n            {\r\n                label: HeadersConstant.Chart_02_Heading_04,\r\n                data: props.Plot4,\r\n                borderColor: color_04,\r\n                backgroundColor: color_04,\r\n                pointBackgroundColor:color_04,\r\n                pointBorderColor:color_04,\r\n            }\r\n        ]\r\n\r\n    }\r\n    const options = {\r\n        title: {\r\n            display:true,\r\n            text: 'Quality Analysis Month to Date',\r\n\r\n        },\r\n        scales: {\r\n            yAxes: [\r\n                {\r\n                    ticks:{\r\n                        min:0,\r\n                        max:10,\r\n                        stepSize: 1,\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    }\r\n    return <Line className = \"Chart-Line-Chart\"\r\n    data={data} options={options}/>;\r\n}\r\n\r\nexport default LineChaart;","const DashboardDetails = {\r\n    Heading:\"Welcome to Your Dashboard\",\r\n    WaterCoins:\"WaterDrops\",\r\n    Allowance:\"Allowance\",\r\n    ExpireText:\"Expires on \",\r\n    LogoName:\"logo.png\"\r\n};\r\n\r\nexport default DashboardDetails;","import React from 'react';\r\nimport DashboardDetails from '../constants/WelcomeScreen.js';\r\nexport default function Header()\r\n{\r\n    return(\r\n        <div className=\"FullSizeContainer\">\r\n        <div className=\"Section-02-Header\">{DashboardDetails.Heading}</div>\r\n        <div className=\"Section-03-Header\">\r\n        <img src={process.env.PUBLIC_URL +DashboardDetails.LogoName} className=\"Customize-Logo\" alt=\"Loading...\"></img>\r\n        </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport HeadersConstant from '../constants/ResponseConstants.js';\r\nfunction BarChart(props)\r\n{\r\n    const Colors = ['rgba(255,156,86,0.6)','rgba(255,156,86,0.6)',\r\n    'rgba(255,156,86,0.6)','rgba(255,156,86,0.6)',\r\n    'rgba(255,156,86,0.6)','rgba(255,156,86,0.6)','rgba(255,156,86,0.6)'];\r\n    const SecondColors = ['rgba(85,236,86,0.2)','rgba(85,236,86,0.2)',\r\n        'rgba(85,236,86,0.2)','rgba(85,236,86,0.2)','rgba(85,236,86,0.2)','rgba(85,236,86,0.2)',\r\n        'rgba(85,236,86,0.2)'];\r\n    const data ={\r\n        labels: HeadersConstant.Day_Lables,\r\n        datasets:[\r\n            {\r\n                label: props.HH1,\r\n                data: props.Plot1,\r\n                borderColor: Colors,\r\n                backgroundColor: Colors,\r\n            },\r\n            {\r\n                label: props.HH2,\r\n                data: props.Plot2,\r\n                borderColor: SecondColors,\r\n                backgroundColor: SecondColors,\r\n            }\r\n        ]\r\n\r\n    }\r\n    const options = {\r\n        title: {\r\n            display:true,\r\n            text: 'Day Wise Quality/Quantity Performance',\r\n\r\n        },\r\n        scales: {\r\n            yAxes: [\r\n                {\r\n                    ticks:{\r\n                        min:0,\r\n                        max:10,\r\n                        stepSize: 1,\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    }\r\n    return <Bar className = \"Chart-Line-Chart\"\r\n    data={data} options={options}/>;\r\n}\r\n\r\nexport default BarChart;","import React from 'react';\r\nimport { Doughnut } from 'react-chartjs-2';\r\n\r\nfunction DonutChart(props)\r\n{\r\n    const Color = ['rgba(255,156,86,0.6)','rgba(250,100,100,0.6)','rgba(100,250,200,0.6)',\r\n    'rgba(120,120,120,0.5)','rgba(120,240,120,0.5)','rgba(60,120,240,0.6)','rgba(200,120,120,0.5)','rgba(120,120,250,0.5)'];\r\n    const data ={\r\n        labels: props.Words,\r\n        datasets:[\r\n            {\r\n                label: props.Label,\r\n                data: props.Data,\r\n                borderColor: Color,\r\n                backgroundColor: Color,\r\n            }\r\n        ]\r\n\r\n    }\r\n    const options = {\r\n        title: {\r\n            display:true,\r\n            text: props.Texts,\r\n\r\n        }\r\n    }\r\n    return <Doughnut className = \"Chart-Line-Chart\"\r\n    data={data} options={options}/>;\r\n}\r\n\r\nexport default DonutChart;","import React, { useState } from 'react';\r\nimport { TableHeaders,MyTableHeaders} from '../constants/dummyconstantfiles.js';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Auth from '../security/Auth.jsx';\r\nimport {ipaddress} from '../constants/dummyconstantfiles.js';\r\n\r\nfunction PrettyTable(props)\r\n{\r\n    let history = useHistory();\r\n    const FetchedData = props.Data;\r\n    const SelfData = props.selfData;\r\n    const [PasswordPrompt,updatePasswordPrompt] = useState(false);\r\n    const [loaded,loading] = useState(false);\r\n\r\n    const [details,setpurchaseDetails] = useState({\r\n        _id:null,\r\n        Credits:null,\r\n        Password:null,\r\n    });\r\n\r\n    return(\r\n        <div>\r\n        <h3 className=\"My-Table-Details-01\">Industrial Performance</h3>\r\n        <table className=\"Pretty-Table\">\r\n        {TableHeaders.map(header=>{\r\n            return(<th className=\"Pretty-Table-Header\">{header}</th>);\r\n        })}\r\n        {\r\n            FetchedData.map(props=>{\r\n                return(<tr className=\"Pretty-Table-Row\">\r\n                    <td className=\"Pretty-Table-Body\">\r\n                    {props.Registerar_UserName}\r\n                    </td>\r\n                    <td className=\"Pretty-Table-Body\">\r\n                    {props._id}\r\n                    </td>\r\n                    <td className=\"Pretty-Table-Body\">\r\n                    {props.Allowance}\r\n                    </td>\r\n                    <td className=\"Pretty-Table-Body\">\r\n                    {props.Credits}\r\n                    </td>\r\n                    </tr>);\r\n            })\r\n        }\r\n        </table>\r\n        <h3 className=\"My-Table-Details\">My Details</h3>\r\n        <table className=\"Pretty-Table\">\r\n        {\r\n            MyTableHeaders.map(header=>{\r\n                return<th className=\"My-Pretty-Table-Header\">\r\n                {header}\r\n                </th>;\r\n            })\r\n        }\r\n        <tr className=\"Pretty-Table-Row\">\r\n        {\r\n            SelfData.map(detail=>{\r\n                return(<td className=\"Pretty-Table-Body\">\r\n                {detail}\r\n                </td>);\r\n            })\r\n        }\r\n        </tr>\r\n        </table>\r\n        <div className=\"Purchase-Reuqester\">\r\n        <div>\r\n        <Form.Group className=\"Purchase-Reuester-Column\" key={1} autoComplete=\"off\" controlId=\"PurchaseEntry\">\r\n        <Form.Label>Industry-ID</Form.Label>\r\n        <Form.Control type=\"text\" placeholder=\"Enter Industry-ID\"\r\n        value={details._id} onChange={val=>{setpurchaseDetails({...details, [\"_id\"]: val.target.value});}}/>\r\n      </Form.Group>\r\n      <Form.Group className=\"Purchase-Reuester-Column\" key={2} autoComplete=\"off\" controlId=\"PurchaseCredit\">\r\n        <Form.Label>Water Drops</Form.Label>\r\n        <Form.Control type=\"text\" placeholder=\"Enter Water Drops\"\r\n        value={details.Credits} onChange={val=>{setpurchaseDetails({...details, [\"Credits\"]: val.target.value});}}/>\r\n      </Form.Group>\r\n      {PasswordPrompt?<div>\r\n        <div className=\"Purchase-Reuqester\">\r\n        <Form.Group className=\"Purchase-Reuester-Column\" key={3} autoComplete=\"off\" controlId=\"Password\">\r\n        <Form.Label>Password</Form.Label>\r\n        <Form.Control type=\"password\" placeholder=\"Confirm Password\"\r\n        value={details.Password} onChange={val=>{setpurchaseDetails({...details, [\"Password\"]: val.target.value});}}/>\r\n      </Form.Group>\r\n        </div>\r\n        {loaded?<div><Button className=\"Purchase-Reuqester\"\r\n        variant=\"primary\" disabled>\r\n        <Spinner\r\n          as=\"span\"\r\n          animation=\"border\"\r\n          size=\"sm\"\r\n          role=\"status\"\r\n          aria-hidden=\"true\"\r\n        />\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </Button></div>:<div className=\"UI-Aligner\"><Button className=\"Purchase-Reuqester UI-Button-Click\" onClick={async(e)=>{\r\n        e.preventDefault();\r\n        loading(true);\r\n        const JSONString = {\r\n            email:props.Email,\r\n            _id:details._id,\r\n            Credits:details.Credits,\r\n            password:details.Password\r\n        }\r\n        const response = await fetch(`${ipaddress}make-a-transaction`,{\r\n            method: 'POST',\r\n            headers:{\r\n              'Content-Type':'application/json'\r\n             },\r\n             body:JSON.stringify(JSONString)\r\n         });\r\n\r\n        const content = await response.json();\r\n        loading(false);\r\n        console.log(props);\r\n        Auth.login(content);\r\n        history.push(\"/login-props-test\");\r\n      }}>Purchase</Button></div>\r\n    }\r\n        </div>:<div className=\"Purchase-Reuqester UI-Aligner\">\r\n        <Button className = \"Purchase-Requester-Column UI-Button-Click\" onClick={\r\n            e=>{\r\n                e.preventDefault();\r\n                updatePasswordPrompt(true);\r\n            }\r\n        }>Procceed</Button>\r\n        </div>}\r\n      </div>\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PrettyTable;\r\n","import React,{ useState } from 'react';\r\nimport LineChart from '../coreComponents/LineChart.js';\r\nimport LineChaart from '../coreComponents/LineChaart.js';\r\nimport Header from '../coreComponents/Header.jsx';\r\nimport Button from 'react-bootstrap/Button';\r\nimport BarChart from '../coreComponents/BarCharts.js';\r\nimport DonutChart from '../coreComponents/DonutChart.js';\r\nimport PrettyTable from '../coreComponents/PrettyTable.js';\r\nimport HeadersConstant from '../constants/ResponseConstants.js';\r\nimport {ipaddress} from '../constants/dummyconstantfiles.js';\r\n\r\nexport default function DisplayScreen(props)\r\n{\r\n    function reduce_to_index(data,factor)\r\n    {\r\n        let LowedDown = [];\r\n        for(let i=0;i<data.length;i++)\r\n    {\r\n        LowedDown.push(data[i]/factor);\r\n    }\r\n    return(LowedDown);\r\n    }\r\n    const jsonData = props.Block_Chain[props.Block_Chain.length-1].water_data;\r\n    let LowedDown = reduce_to_index(jsonData.FlowRate,1000);\r\n    let QuantityIndexed = reduce_to_index(jsonData.Water_Quantity_Index_Day,1500000);\r\n    const [ChartState,changeChartState] = useState(false);\r\n    const [ButtonText,changeButtonText] = useState(\"Switch to Purchase Screen\");\r\n    const streamSession = \"Generate Stream Session\";\r\n    function switchPurchase()\r\n    {\r\n        changeChartState(prev=>{\r\n            return(!prev);\r\n        });\r\n        changeButtonText(prev=>{\r\n            if(prev===\"Switch to Purchase Screen\")\r\n            return(\"Switch to Dashboard Screen\");\r\n            else\r\n            return(\"Switch to Purchase Screen\");\r\n\r\n        });\r\n        \r\n    }\r\n    const generatePurchase = async()=>\r\n    {\r\n        const res = await fetch(`${ipaddress}livepeer-streaming`,{\r\n            method: 'POST',\r\n            headers:{\r\n              'Content-Type':'application/json'\r\n            },\r\n            body:JSON.stringify({\"email\":props.email})\r\n          }).then(response=>response.json()).then(\r\n              finalbody=>{alert(`Your stream generated url is ${finalbody.url}. Note that the url will automatically expire after 30 mins. You may renew it here. You can stream your session @ https://videojs.github.io/videojs-contrib-hls/`);}\r\n          );\r\n\r\n\r\n\r\n    }\r\n    return(<div className=\"Display-Screen-Global-Div\">\r\n        <Header />\r\n        <div className=\"UI-Aligner\"><Button className=\"Switch-Button-In-Display UI-Button-Click\"\r\n        onClick = {generatePurchase}>{streamSession}</Button>\r\n        <Button className=\"Switch-Button-In-Display UI-Button-Click\"\r\n        onClick = {switchPurchase}>{ButtonText}</Button>\r\n        </div>\r\n        {ChartState?<div>\r\n        <PrettyTable Data={props.industry_response} selfData = {props.self_details} Email = {props.email}/>\r\n        </div>:<div><div className=\"Chart\">\r\n        <div className=\"Chart-Candidate\"><LineChart Plot1 = {LowedDown}\r\n        Plot2 = {jsonData.Solid_Waste_Analysis_Index}/></div>\r\n\r\n        <div className=\"Chart-Candidate\"> <BarChart Plot1 = {jsonData.Water_Quality_Index_Day}\r\n        Plot2={QuantityIndexed} HH1={HeadersConstant.Water_Quality_Heading}\r\n        HH2 ={HeadersConstant.Water_Quantity_Heading}/></div>\r\n        <div className=\"Chart-Candidate\"><DonutChart ColorSchema={HeadersConstant.Color_For_Credits} Texts={\"Quality Index\"}\r\n        Data={[jsonData.Quality_Analysis.SPI,jsonData.Quality_Analysis.CDI,jsonData.Quality_Analysis.SWI,\r\n            jsonData.Quality_Analysis.HSI]} Label={HeadersConstant.QualityParamsHeading}\r\n            Words={HeadersConstant.QualityWords} LabelTime = {HeadersConstant.Time_Labels}/></div>\r\n        </div>\r\n        <div className=\"Chart\">\r\n        <div className=\"Chart-Candidate\"><LineChaart Plot1 = {jsonData.Previous_Comparision.Yesterday_Quality}\r\n        Plot2 = {jsonData.Previous_Comparision.Last3Day_Quality}\r\n        Plot3 = {jsonData.Previous_Comparision.Last7Day_Quality}\r\n        Plot4 = {jsonData.Previous_Comparision.Monthly_Quality}/></div>\r\n\r\n        <div className=\"Chart-Candidate\"> <BarChart Plot1 = {jsonData.Stable_Comparision.Stable_Quality}\r\n        Plot2={jsonData.Stable_Comparision.Self_Quality} HH1={HeadersConstant.StableHeading} HH2={HeadersConstant.SelfHeading}/></div>\r\n        <div className=\"Chart-Candidate\"><DonutChart\r\n        Data={jsonData.Credit_Consumption_History} Label={HeadersConstant.CreditsParamHeading} Texts={\"Credit Consumption\"}\r\n            Words={HeadersConstant.CreditWords}/></div>\r\n        </div>\r\n        </div>\r\n        }\r\n        </div>);\r\n}","import React, { Component } from 'react';\r\nimport {Route,Redirect} from 'react-router-dom';\r\nimport Auth from '../security/Auth.jsx';\r\n\r\n\r\nconst ProtectedRoute = ({component: Component,...rest}) => {\r\n  return(\r\n    <Route {...rest} render ={\r\n      (props)=>{\r\n        if(Auth.isAuthenticated().authenticated)\r\n        return <Component{...Auth.isAuthenticated().jsonData} />\r\n        else\r\n        {\r\n          return <Redirect to={\r\n            {\r\n              pathname: \"/login\",\r\n              state: {\r\n                from: props.location\r\n              }\r\n            }\r\n          }/>\r\n        }\r\n\r\n      }\r\n    }/>\r\n  );\r\n}\r\n\r\nexport default ProtectedRoute;","import React from 'react';\nimport StarterScreen from './components/screens/StarterScreen.jsx';\nimport LoginScreen from './components/screens/LoginScreen.jsx';\nimport RegisterScreen from './components/screens/RegisterScreen.jsx';\nimport DisplayScreen from './components/screens/DisplayScreen.jsx';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import Footer from './components/junk/Footer';\n//import LineChart from './components/coreComponents/LineChart.js';\nimport ProtectedRoute from './components/security/PrivateRoute.jsx';\nimport './App.css';\nimport {BrowserRouter,Route,Switch} from 'react-router-dom';\n  function App(){\n    return (\n    <div className=\"App\">\n    <BrowserRouter>\n    <Switch>\n    <Route component={StarterScreen} exact path=\"/\"></Route>\n    <Route component={RegisterScreen} exact path=\"/register\"></Route>\n    <Route component={LoginScreen} exact path=\"/login\"></Route>\n    <ProtectedRoute component={DisplayScreen} exact path=\"/login-props-test\" />\n    </Switch>\n    </BrowserRouter>\n    </div>\n  );\n    }\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}